
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import org.junit.jupiter.api.DisplayName;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.function.Consumer;

class RPLSTest {

	private Consumer<Serializable> callback;
	Socket socketClient,socketClient1,socketClient2;
	ObjectOutputStream out;
	ObjectInputStream in;
	GameInfo gameInfo;
	int portNum;
	ArrayList<String> receivedStrings;
	ArrayList<Integer> clientsList;
	Client theClient;



	@BeforeEach
	void init () throws IOException {
		receivedStrings = new ArrayList<String>();
		clientsList = new ArrayList<Integer>(10);

		gameInfo = new GameInfo();

	}

	@Test
	void socketTest1() throws IOException {
		socketClient = new Socket();
		assertEquals(-1, socketClient.getLocalPort(),"Wrong port number");

	}// end void socketTest()

	@Test
	void arrayListSize(){
		assertEquals(0, clientsList.size(),"not a proper size");

	}
	@Test
	void arrayListEmpty(){
		assertEquals(true, clientsList.isEmpty(),"not a proper size");

	}

	@Test
	void arrayListContains2() {
		gameInfo.clientsList.add(1);
		gameInfo.clientsList.add(2);
		assertEquals(2, gameInfo.clientsList.size(), "not a proper size");

	}


	@Test
	void arrayListTest3() {
		gameInfo.clientsList.add(1);
		gameInfo.clientsList.add(2);
		gameInfo.clientsList.add(5);
		assertEquals(3, gameInfo.clientsList.size(), "Size is correct");

	}
}






