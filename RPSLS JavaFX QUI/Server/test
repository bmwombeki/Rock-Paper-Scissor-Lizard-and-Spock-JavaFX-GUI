

import static org.junit.jupiter.api.Assertions.*;

import com.sun.security.ntlm.Client;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import org.junit.jupiter.api.DisplayName;
import sun.java2d.pipe.AATextRenderer;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.function.Consumer;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import java.util.function.Consumer;
import java.io.Serializable;
import java.util.ArrayList;

class RPLSTest {
	ArrayList<String> receivedStrings;
	ArrayList<Integer> clientsList;
	private Consumer <Serializable>callback;
	Server gameServer;
	GameInfo theGameInfos;
	ServerSocket theGameSocket,theGameSocket1, theGameSocket2;
	String player1, player2, winner;
	Server.ClientThread c;


	@BeforeEach
	void init() throws IOException {
		gameServer = new Server();
		theGameInfos = new GameInfo();
		receivedStrings = new ArrayList<String>();
		clientsList = new ArrayList<Integer>(6);
	}

	@Test
	void socketTest1() throws IOException {
		theGameSocket = new ServerSocket(8888);
		assertEquals(8888, theGameSocket.getLocalPort(),"Wrong port number");

	}// end void socketTest()

	@Test
	void socketTest2() throws IOException {
		theGameSocket1 = new ServerSocket(8888);
		assertNotSame(9999, 8888,"not the same port number");
	}

	@Test
	void arrayListTest(){
		assertEquals(0, clientsList.size(),"not a proper size");

	}


	@Test
	void ServerCountTest3(){
		assertEquals(1, gameServer.count, "Not the right count value");
	}

	@Test
	void ServerTest5(){
		assertEquals("", gameServer.player2Choice, "Player2Choice is not the right value");
	}




}// end  Class RPLSTest
